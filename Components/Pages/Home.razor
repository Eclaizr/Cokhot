@page "/"
@using System.Net
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Cokhot - Home</PageTitle>

<!-- Header section -->

<div class="wrapper">
<header>
    <a href="#">
        <img src="images/cokhot_logo.png" alt="Cokhot logo" class="cokhot_logo" />
        <span class="title_header"> Cokhot </span>
    </a>

    <ul class="navbar">
        <li><a href="#" class="active">Home</a></li>
        <li><a href="#">Recipes</a></li>
        <li><a href="#">Drinks</a></li>
        <li><a href="#">Grocery List</a></li>
    </ul>

    <div class="main">
        <a href="#" class="user"><i class="ri-user-fill"></i></a>
        <div class="bx bx-menu" id="menu-icon"></div>
    </div>
</header>

<!-- Main section -->
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h1 class="title">What would you like to eat on your plate?</h1>
            <p class="description">It will take you only a few minutes!</p>
        </div>
    </div>

    <button class="main-btn">Let's find out!</button>
    <button class="main-btn">Add a meal</button>
</div>

<!-- Footer -->
<footer class="footer">
    <div class="wave" style="height: 150px; overflow: hidden;">
              <svg viewBox="0 0 500 150" preserveAspectRatio="none" style="height: 100%; width: 100%;">
                  <path d="M0,60 
                      C50,100 100,20 150,60 
                      C200,100 250,20 300,60 
                      C350,100 400,20 450,60 
                      C475,75 490,60 500,60 
                      L500,150 L0,150 Z"
                      style="stroke: none; fill: #f4d8c4;"></path>
                </svg>
        </div>
    <p>&copy; 2025 Cokhot. All rights reserved.</p>
</footer>

</div>

<!-- Example display of plats -->
@if (plats != null)
{
    <ul>
        @foreach (var plat in plats)
        {
            <li>@plat.nomPlat</li>
        }
    </ul>
}


@code {
    private readonly string getPlatsUrl = "http://localhost:5150/api/plats";
    private List<Plat>? plats;

    [SupplyParameterFromForm]
    private Plat Plat { get; set; } = new Plat { nomPlat = "" };

    protected override async Task OnInitializedAsync()
    {
        await GetPlatsAsync();
    }

    private async Task GetPlatsAsync()
    {
        using var httpClient = new HttpClient();
        var response = await httpClient.GetAsync(getPlatsUrl);
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            plats = System.Text.Json.JsonSerializer.Deserialize<List<Plat>>(content,
                new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        }
    }

    private async Task PostPlat()
    {
        using var httpClient = new HttpClient();
        var content = new StringContent(JsonConvert.SerializeObject(Plat), System.Text.Encoding.UTF8, "application/json");
        var response = await httpClient.PostAsync(getPlatsUrl, content);
        if (response.IsSuccessStatusCode)
        {
            await GetPlatsAsync();
            Plat = new Plat { nomPlat = "" };
        }
    }
}