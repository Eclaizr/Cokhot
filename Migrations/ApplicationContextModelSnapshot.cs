// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cokhot.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.Property<int>("IdIngredient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdIngredient"));

                    b.Property<string>("NomIngredient")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PrixKiloIngredient")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdIngredient");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("IngredientDansPlat", b =>
                {
                    b.Property<int>("IdPlat")
                        .HasColumnType("int");

                    b.Property<int>("IdIngredient")
                        .HasColumnType("int");

                    b.Property<int>("IngredientIdIngredient")
                        .HasColumnType("int");

                    b.Property<int>("PlatIdPlat")
                        .HasColumnType("int");

                    b.Property<string>("QuantiteIngredient")
                        .HasColumnType("longtext");

                    b.HasKey("IdPlat", "IdIngredient");

                    b.HasIndex("IngredientIdIngredient");

                    b.HasIndex("PlatIdPlat");

                    b.ToTable("IngredientsDansPlat");
                });

            modelBuilder.Entity("Plat", b =>
                {
                    b.Property<int>("IdPlat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPlat"));

                    b.Property<bool>("EstEpicePlat")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EstHealthy")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EstVegetarien")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LienPhotoPlat")
                        .HasColumnType("longtext");

                    b.Property<string>("LienRecettePlat")
                        .HasColumnType("longtext");

                    b.Property<string>("NomPlat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("NotePlat")
                        .HasColumnType("int");

                    b.Property<string>("OriginePlat")
                        .HasColumnType("longtext");

                    b.Property<string>("RepasPlat")
                        .HasColumnType("longtext");

                    b.Property<string>("SaveurPlat")
                        .HasColumnType("longtext");

                    b.Property<int?>("TempsPreparationPlat")
                        .HasColumnType("int");

                    b.HasKey("IdPlat");

                    b.ToTable("Plats");

                    b.HasData(
                        new
                        {
                            IdPlat = 1,
                            EstEpicePlat = false,
                            EstHealthy = true,
                            EstVegetarien = false,
                            LienPhotoPlat = "",
                            LienRecettePlat = "",
                            NomPlat = "Spaghetti Bolognese",
                            NotePlat = 5,
                            OriginePlat = "Italie",
                            RepasPlat = "Dîner",
                            SaveurPlat = "Savoureux",
                            TempsPreparationPlat = 30
                        },
                        new
                        {
                            IdPlat = 2,
                            EstEpicePlat = false,
                            EstHealthy = true,
                            EstVegetarien = false,
                            LienPhotoPlat = "",
                            LienRecettePlat = "",
                            NomPlat = "Salade César",
                            NotePlat = 4,
                            OriginePlat = "États-Unis",
                            RepasPlat = "Déjeuner",
                            SaveurPlat = "Frais",
                            TempsPreparationPlat = 15
                        });
                });

            modelBuilder.Entity("IngredientDansPlat", b =>
                {
                    b.HasOne("Ingredient", "Ingredient")
                        .WithMany("IngredientsDansPlat")
                        .HasForeignKey("IngredientIdIngredient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plat", "Plat")
                        .WithMany("IngredientsDansPlat")
                        .HasForeignKey("PlatIdPlat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Plat");
                });

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.Navigation("IngredientsDansPlat");
                });

            modelBuilder.Entity("Plat", b =>
                {
                    b.Navigation("IngredientsDansPlat");
                });
#pragma warning restore 612, 618
        }
    }
}
